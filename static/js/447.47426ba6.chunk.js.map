{"version":3,"file":"static/js/447.47426ba6.chunk.js","mappings":"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","sources":["api/moviesAPI.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport defaultImage from 'images/photo.jpg';\n\nexport const API_KEY = 'bb95fe38b7df9f87f0ecf707b6f0bb8b';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching movies');\n  }\n};\n\nexport const fetchQueryMovies = async querySearch => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${querySearch}&page=1`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching movies');\n  }\n};\n\nexport const normalizeMoviesList = arr => {\n  return arr.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path\n      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n      : defaultImage,\n  }));\n};\n\nexport const fetchMoviesById = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching movie');\n  }\n};\n\nexport const fetchCastInfo = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching cast');\n  }\n};\n\nexport const normalizedCast = arr => {\n  return arr.map(({ cast_id, character, name, profile_path }) => ({\n    id: cast_id,\n    character,\n    name,\n    photo: profile_path\n      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n      : defaultImage,\n  }));\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching reviews');\n  }\n};\n\nexport const normalizedReviews = arr => {\n  return arr.map(({ id, content, author_details, author }) => ({\n    id,\n    author,\n    content,\n  }));\n};\n\nexport const fetchTrailerVideo = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.error(e);\n    Notiflix.Notify.failure('Error fetching reviews');\n  }\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ListOfMovies = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  grid-gap: 16px;\n\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 12px;\n`;\n\nexport const Item = styled.li`\n  height: 100%;\n`;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n  font-style: normal;\n  display: block;\n\n  font-size: 20px;\n\n  color: currentColor;\n`;\n\nexport const ItemBox = styled.div`\n  position: relative;\n  padding: 10px;\n  display: flex;\n  gap: 4px;\n  align-items: stretch;\n  flex-direction: column;\n`;\n\nexport const TitleMovie = styled.h2`\n  margin-top: 15px;\n  font-size: 19px;\n  text-align: center;\n`;\nexport const Img = styled.img`\n  max-width: 100%;\n  height: 100%;\n  min-height: 440px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  margin-bottom: 16px;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  LinkStyled,\n  TitleMovie,\n  ListOfMovies,\n  Item,\n  Img,\n} from 'components/MoviesList/MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ListOfMovies>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <LinkStyled to={`/movies/${movie.id}`} state={{ from: location }}>\n            <Img src={movie.poster} alt={movie.title} />\n            <TitleMovie>{movie.title}</TitleMovie>\n          </LinkStyled>\n        </Item>\n      ))}\n    </ListOfMovies>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const HomeContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 25px;\n`;\n\nexport const HomeTitle = styled.h1`\n  margin-top: 20px;\n\n  text-transform: uppercase;\n`;\n","import Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { normalizeMoviesList, fetchTrendingMovies } from 'api/moviesAPI';\nimport { HomeContainer, HomeTitle } from './Home.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    try {\n      const getTrendingMovies = async () => {\n        const {\n          data: { results },\n        } = await fetchTrendingMovies();\n\n        setMovies(normalizeMoviesList(results));\n      };\n\n      getTrendingMovies();\n    } catch (error) {\n      console.error(error);\n      Notiflix.Notify.failure('Error fetching movies');\n    }\n  }, []);\n\n  return (\n    <HomeContainer>\n      <HomeTitle>Trending today</HomeTitle>\n      <MoviesList movies={movies} />\n    </HomeContainer>\n  );\n};\nexport default Home;\n"],"names":["API_KEY","fetchTrendingMovies","axios","console","error","Notiflix","fetchQueryMovies","querySearch","normalizeMoviesList","arr","map","id","title","poster_path","poster","defaultImage","fetchMoviesById","movieId","fetchCastInfo","normalizedCast","cast_id","character","name","profile_path","photo","fetchReviews","normalizedReviews","content","author_details","author","ListOfMovies","styled","Item","LinkStyled","Link","TitleMovie","Img","movies","location","useLocation","movie","to","state","from","src","alt","HomeContainer","HomeTitle","useState","setMovies","useEffect","getTrendingMovies","results","data","MoviesList"],"sourceRoot":""}