{"version":3,"file":"static/js/690.2339e382.chunk.js","mappings":"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","sources":["api/moviesAPI.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","images/arrow-left.svg","pages/MovieDetails/MovieDetails.styled.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport defaultImage from 'images/photo.jpg';\n\nexport const API_KEY = 'bb95fe38b7df9f87f0ecf707b6f0bb8b';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching movies');\n  }\n};\n\nexport const fetchQueryMovies = async querySearch => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${querySearch}&page=1`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching movies');\n  }\n};\n\nexport const normalizeMoviesList = arr => {\n  return arr.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path\n      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n      : defaultImage,\n  }));\n};\n\nexport const fetchMoviesById = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching movie');\n  }\n};\n\nexport const fetchCastInfo = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching cast');\n  }\n};\n\nexport const normalizedCast = arr => {\n  return arr.map(({ cast_id, character, name, profile_path }) => ({\n    id: cast_id,\n    character,\n    name,\n    photo: profile_path\n      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n      : defaultImage,\n  }));\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching reviews');\n  }\n};\n\nexport const normalizedReviews = arr => {\n  return arr.map(({ id, content, author_details, author }) => ({\n    id,\n    author,\n    content,\n  }));\n};\n\nexport const fetchTrailerVideo = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.error(e);\n    Notiflix.Notify.failure('Error fetching reviews');\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderBox>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </LoaderBox>\n  );\n};\n\nexport default Loader;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrowLeft(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"arrow-left\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.586 27.414l-10-10c-0.781-0.781-0.781-2.047 0-2.828l10-10c0.781-0.781 2.047-0.781 2.828 0s0.781 2.047 0 2.828l-6.586 6.586h19.172c1.105 0 2 0.895 2 2s-0.895 2-2 2h-19.172l6.586 6.586c0.39 0.39 0.586 0.902 0.586 1.414s-0.195 1.024-0.586 1.414c-0.781 0.781-2.047 0.781-2.828 0z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.da1d7806a30e85de400a05adb0a08481.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  justify-content: space-around;\n  padding: 14px 0;\n`;\nexport const AdditionalInfoLink = styled(Link)`\n  border-radius: 4px;\n\n  color: inherit;\n  font-weight: 500;\n  font-size: 20px;\n  text-decoration: none;\n  text-align: center;\n  text-transform: uppercase;\n\n  &.active {\n    background-color: #ffd700;\n    box-shadow: 0px 0px 7px rgba(27, 27, 27, 0.15);\n    border-radius: 100px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const MovieImg = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n`;\n\nexport const TextBox = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  text-align: center;\n`;\n\nexport const Span = styled.span`\n  font-size: 20px;\n  font-weight: 400;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n`;\n\nexport const TitleText = styled.h3`\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  MovieContainer,\n  MovieImg,\n  TextBox,\n  Title,\n  Span,\n  Text,\n  TitleText,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({ movie }) => {\n  return (\n    <MovieContainer>\n      <MovieImg src={movie.poster} alt={movie.title} />\n      <TextBox>\n        <Title>{movie.title}</Title>\n        <TitleText>\n          User score: <Span>{movie.rating}</Span>\n        </TitleText>\n        <TitleText>Overview:</TitleText>\n        <Text>{movie.overview}</Text>\n        <TitleText>Genres:</TitleText>\n        <Text>{movie.genres}</Text>\n      </TextBox>\n    </MovieContainer>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n\nexport default MovieInfo;\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const BackLinkBtn = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: inherit;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { BackLinkBtn } from './BackLink.styled';\nimport { ReactComponent as ArrowIcon } from './../../images/arrow-left.svg';\n\nconst BackLink = () => {\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  return (\n    <BackLinkBtn to={backLinkHref.current}>\n      <ArrowIcon width=\"25\" height=\"25\" />\n      Go back to films\n    </BackLinkBtn>\n  );\n};\n\nexport default BackLink;\n","import Notiflix from 'notiflix';\nimport { useEffect, useState, Suspense } from 'react';\nimport { fetchMoviesById } from 'api/moviesAPI';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { CastList, AdditionalInfoLink } from './MovieDetails.styled';\nimport Loader from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport BackLink from 'components/BackLink/BackLink';\n\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieById = async () => {\n      try {\n        const respons = await fetchMoviesById(movieId);\n        const data = respons.data;\n\n        const objectMovie = {\n          poster: data.poster_path\n            ? `https://image.tmdb.org/t/p/w500${data.poster_path}`\n            : `https://thumbs.dreamstime.com/b/%D0%B8-%D1%8E%D1%81%D1%82%D1%80%D0%B0%D1%86%D0%B8%D1%8F-%D0%BF-%D0%B0%D0%BA%D0%B0%D1%82%D0%B0-%D0%BA%D0%B8%D0%BD%D0%BE-48746594.jpg`,\n          title: data.title,\n          rating: data.vote_average.toFixed(1),\n          genres: data.genres.map(({ name }) => name).join(', '),\n          overview: data.overview,\n        };\n        setMovie(objectMovie);\n      } catch (error) {\n        console.error(error);\n        Notiflix.Notify.failure('Error fetching movies');\n        setMovie({});\n      }\n    };\n    getMovieById();\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink />\n      {Boolean(Object.keys(movie).length) && (\n        <>\n          <MovieInfo movie={movie} />\n          <CastList>\n            <li>\n              <AdditionalInfoLink to=\"cast\">Cast</AdditionalInfoLink>\n            </li>\n            <li>\n              <AdditionalInfoLink to=\"reviews\">Reviews</AdditionalInfoLink>\n            </li>\n          </CastList>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["API_KEY","fetchTrendingMovies","axios","console","error","Notiflix","fetchQueryMovies","querySearch","normalizeMoviesList","arr","map","id","title","poster_path","poster","defaultImage","fetchMoviesById","movieId","fetchCastInfo","normalizedCast","cast_id","character","name","profile_path","photo","fetchReviews","normalizedReviews","content","author_details","author","LoaderBox","styled","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","_path","CastList","AdditionalInfoLink","Link","MovieContainer","MovieImg","TextBox","Title","Span","Text","TitleText","movie","src","alt","rating","overview","genres","BackLinkBtn","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgArrowLeft","_ref","svgRef","titleId","props","xmlns","viewBox","ref","undefined","d","ForwardRef","location","useLocation","backLinkHref","useRef","state","from","to","current","useState","setMovie","useParams","useEffect","getMovieById","respons","data","objectMovie","vote_average","toFixed","join","Boolean","Suspense","fallback","Loader"],"sourceRoot":""}